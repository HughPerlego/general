
WITH Main_Homepage_Table AS (
SELECT user_id, CAST(record_date as date) as view_date, COUNT(*) AS Homepage_Views 
FROM prodgluegoldbuckets3database.event_tracking 
WHERE user_id IS NOT NULL 
AND record_date >= CAST('2022-06-01' AS DATE)
AND event_name = 'page view'
AND current_url = 'https://www.perlego.com/home'
AND environment_name = 'Web Application'
GROUP BY user_id, CAST(record_date as date)),

/* create table getting views for each user and day for the sidebar -
create case statements to determine how many times each day the buttons are clicked - 
very high reading & want to read count which may be due to it accidently counting ereader session as a reading view - rather than the homepage- applying non referrer_url to try and remove these*/

Sidebar_Page_Views AS (
SELECT user_id, CAST(record_date as date) as view_date, 
       
       SUM(CASE WHEN current_url = 'https://www.perlego.com/discover' THEN 1 ELSE 0 END) AS Discover_View,
       
        SUM(CASE WHEN current_url = 'https://www.perlego.com/refer-a-friend' THEN 1 ELSE 0 END) AS Reffer_A_Friend_View,
       
         SUM(CASE WHEN current_url = 'https://www.perlego.com/reading' AND referrer_url <> 'https://ereader.perlego.com/' THEN 1 ELSE 0 END) AS Reading_View,
         
         SUM(CASE WHEN current_url = 'https://www.perlego.com/want-to-read' AND referrer_url <> 'https://ereader.perlego.com/' THEN 1 ELSE 0 END) AS Want_To_Read_View,
    
        SUM(CASE WHEN current_url = 'https://www.perlego.com/completed' THEN 1 ELSE 0 END) AS Completed_Read_View,
      
       SUM(CASE WHEN current_url = 'https://www.perlego.com/notebook' THEN 1 ELSE 0 END) AS Notebook_View
FROM event_tracking 
WHERE user_id IS NOT NULL 
AND event_name = 'page view'
AND record_date >= CAST('2022-06-01' AS DATE)
AND current_url IN ('https://www.perlego.com/discover', 'https://www.perlego.com/refer-a-friend',
                    'https://www.perlego.com/reading', 'https://www.perlego.com/want-to-read',
                    'https://www.perlego.com/completed', 'https://www.perlego.com/notebook')
AND environment_name = 'Web Application'
GROUP BY user_id, CAST(record_date as date)),

/* Workspace views - issue of duplicate page views for workspace - so add in additional page title conditions as seems to align with event sequence - but this may need to be reviewed at a later date  */

Workspace_User_Data AS (
SELECT user_id, CAST(record_date as date) as view_date, 
       
       SUM(CASE WHEN event_name = 'page view' AND current_url 
       LIKE 'https://www.perlego.com/workspace%' THEN 1 ELSE 0 END) AS Workspace_Viewed,
       
         SUM(CASE WHEN event_name = 'workspace created' THEN 1 ELSE 0 END) AS Workspace_Created
       
FROM event_tracking 
WHERE user_id IS NOT NULL 
AND record_date >= CAST('2022-06-01' AS DATE)
AND ((event_name = 'page view' AND current_url LIKE 'https://www.perlego.com/workspace%' AND page_title = 'Home | Perlego')
OR (event_name = 'workspace created'))
AND environment_name = 'Web Application'
GROUP BY user_id, CAST(record_date as date)),

/* udpating book search views - due to location not being populated after the 30th of october - will have to see what event was directly after the homepage for the user */

Grouped_Search_Results AS (
SELECT user_id, CAST(record_date as date) as view_date, COUNT(*) AS Search_Page_Views
FROM prodgluegoldbuckets3database.event_tracking 
WHERE user_id IN (SELECT user_id FROM Main_Homepage_Table) 
AND record_date >= CAST('2022-06-01' AS DATE)
AND environment_name = 'Web Application'
AND current_url = 'https://www.perlego.com/search'
AND event_name = 'page view'
GROUP BY user_id, CAST(record_date as date)),

/* account settings options - don't seem to have evetn for clicking button - only for profile centre and settings */

Account_Button_Page_Views AS (
SELECT user_id, CAST(record_date as date) as view_date, 
       
       SUM(CASE WHEN current_url = 'https://www.perlego.com/settings' THEN 1 ELSE 0 END) AS AccountButton_Settings_View,
       SUM(CASE WHEN page_title = 'Profile | Perlego' THEN 1 ELSE 0 END) AS AccountButton_Profile_View
       
FROM event_tracking 
WHERE user_id IS NOT NULL 
AND event_name = 'page view'
AND record_date >= CAST('2022-06-01' AS DATE)
AND (current_url = 'https://www.perlego.com/settings' OR page_title = 'Profile | Perlego')
AND environment_name = 'Web Application'
GROUP BY user_id, CAST(record_date as date)),

/* combine non carousel sections together - join by user id and year to base homepage table - as at least one visit to homepage needs to have been made to record events  */

Combined_Non_Book_Open_Sections AS (
SELECT Main_Homepage_Table.*, Discover_View, Reffer_A_Friend_View,
       Reading_View, Want_To_Read_View, Completed_Read_View, Notebook_View,
       Workspace_Viewed, Workspace_Created, Search_Page_Views,
       AccountButton_Settings_View, AccountButton_Profile_View
FROM Main_Homepage_Table
LEFT JOIN Sidebar_Page_Views ON (Sidebar_Page_Views.user_id = Main_Homepage_Table.user_id AND 
                                 Sidebar_Page_Views.view_date = Main_Homepage_Table.view_date)
LEFT JOIN Workspace_User_Data ON (Workspace_User_Data.user_id = Main_Homepage_Table.user_id AND 
                                 Workspace_User_Data.view_date = Main_Homepage_Table.view_date)
LEFT JOIN Grouped_Search_Results ON (Grouped_Search_Results.user_id = Main_Homepage_Table.user_id AND 
                                 Grouped_Search_Results.view_date = Main_Homepage_Table.view_date)
LEFT JOIN Account_Button_Page_Views ON (Account_Button_Page_Views.user_id = Main_Homepage_Table.user_id AND                                                                                     Account_Button_Page_Views.view_date = Main_Homepage_Table.view_date)),

/* find first book open times - used to determine which carousel book is opened from 
- was also going to use first status added to reading carousel from the book status event, but there seemed to be a few issues so it has been left for now*/

First_Book_Time AS (
SELECT user_id, book_id, MIN(record_date) AS first_time, 'Book_Read' as status
FROM prod_gold_bucket_database.raw_read_records 
WHERE user_id IN (SELECT user_id FROM Main_Homepage_Table)
AND environment = 'web'
GROUP BY user_id, book_id),

/* combine two ways to add book to reading carousel to find the find time - use this table in the main table join */

Book_Interaction_Relevant_Locations AS (
SELECT user_id, record_date, event_name, 
       CASE WHEN event_name = 'book status added' THEN CAST(JSON_EXTRACT(event_properties, '$.bookID') as int)
            ELSE CAST(JSON_EXTRACT(event_properties, '$.bookId') as int) END AS extracted_book_id,
       CAST(JSON_EXTRACT(event_properties, '$.location') as varchar) AS extracted_location
FROM prodgluegoldbuckets3database.event_tracking 
WHERE event_name in ('book cover click', 'read button click', 'book status added', 'workspace book added')
AND user_id in (SELECT user_id FROM Main_Homepage_Table)
AND record_date >= CAST('2022-06-01' AS date)
AND CAST(JSON_EXTRACT(event_properties, '$.location') as varchar) IN ('home', 'reading', 'want to read', 'completed')),

/* join first time to interation table */

Carousel_And_Reading_Section_Info AS (
SELECT Book_Interaction_Relevant_Locations.user_id, CAST(record_date as date) as view_date,
       
       SUM(CASE WHEN extracted_location = 'home' AND event_name = 'book cover click' AND record_date >= first_time THEN 1 ELSE 0 END) AS Reading_Carousel_Book_Click,
       SUM(CASE WHEN extracted_location = 'home' AND event_name = 'read button click' AND (record_date >= first_time OR first_time IS NULL) THEN 1 ELSE 0 END) AS Reading_Carousel_Book_Open,
       SUM(CASE WHEN extracted_location = 'home' AND event_name = 'book status added' AND record_date >= first_time THEN 1 ELSE 0 END) AS Reading_Carousel_Book_Status_Update,
       SUM(CASE WHEN extracted_location = 'home' AND event_name = 'workspace book added' AND (record_date >= first_time OR first_time IS NULL) THEN 1 ELSE 0 END) AS Reading_Carousel_Workspace_Added,
       
     SUM(CASE WHEN extracted_location = 'home' AND event_name = 'book cover click' AND (record_date <= first_time OR first_time IS NULL) THEN 1 ELSE 0 END) AS Interests_Curated_Carousel_Book_Click,
      SUM(CASE WHEN extracted_location = 'home' AND event_name = 'read button click' AND (record_date <= first_time OR first_time IS NULL) THEN 1 ELSE 0 END) AS Interests_Curated_Carousel_Book_Opened,
      SUM(CASE WHEN extracted_location = 'home' AND event_name = 'book status added' AND (record_date <= first_time OR first_time IS NULL) THEN 1 ELSE 0 END) AS Interests_Curated_Carousel_Book_Status_Update,
      SUM(CASE WHEN extracted_location = 'home' AND event_name = 'workspace book added' AND (record_date <= first_time OR first_time IS NULL) THEN 1 ELSE 0 END) AS Interests_Curated_Carousel_Book_Workspace_Added, 
       
       SUM(CASE WHEN extracted_location = 'reading' AND record_date >= first_time AND event_name = 'book cover click' THEN 1 ELSE 0 END) AS Reading_Section_Continue_Reading_book_cover,
       SUM(CASE WHEN extracted_location = 'reading' AND record_date >= first_time AND event_name = 'read button click' THEN 1 ELSE 0 END) AS Reading_Section_Continue_Reading_book_open,
      
      SUM(CASE WHEN extracted_location = 'reading' AND record_date <= first_time AND event_name = 'book cover click' THEN 1 ELSE 0 END) AS Reading_Section_First_Reading_book_cover,
      SUM(CASE WHEN extracted_location = 'reading' AND record_date <= first_time AND event_name = 'read button click' THEN 1 ELSE 0 END) AS Reading_Section_First_Reading_book_open,
     
       SUM(CASE WHEN extracted_location = 'want to read' AND record_date >= first_time AND event_name = 'book cover click' THEN 1 ELSE 0 END) AS Want_Section_Continue_Reading_book_cover,
        SUM(CASE WHEN extracted_location = 'want to read' AND record_date >= first_time AND event_name = 'read button click' THEN 1 ELSE 0 END) AS Want_Section_Continue_Reading_book_open,
       
      SUM(CASE WHEN extracted_location = 'want to read' AND record_date <= first_time AND event_name = 'book cover click' THEN 1 ELSE 0 END) AS Want_Section_First_Reading_book_cover,
      SUM(CASE WHEN extracted_location = 'want to read' AND record_date <= first_time AND event_name = 'read button click' THEN 1 ELSE 0 END) AS Want_Section_First_Reading_book_open, 
       
      SUM(CASE WHEN extracted_location = 'completed' AND record_date >= first_time AND event_name = 'book cover click' THEN 1 ELSE 0 END) AS Completed_Section_Continue_Reading_book_cover,
      SUM(CASE WHEN extracted_location = 'completed' AND record_date >= first_time AND event_name = 'read button click' THEN 1 ELSE 0 END) AS Completed_Section_Continue_Reading_book_open,
      
      SUM(CASE WHEN extracted_location = 'completed' AND record_date <= first_time AND event_name = 'book cover click' THEN 1 ELSE 0 END) AS Completed_Section_First_Reading_book_cover,
       SUM(CASE WHEN extracted_location = 'completed' AND record_date <= first_time AND event_name = 'read button click' THEN 1 ELSE 0 END) AS Completed_Section_First_Reading_book_open
FROM Book_Interaction_Relevant_Locations
LEFT JOIN First_Book_Time ON (First_Book_Time.user_id = Book_Interaction_Relevant_Locations.user_id AND
                              First_Book_Time.book_id = Book_Interaction_Relevant_Locations.extracted_book_id)
GROUP BY Book_Interaction_Relevant_Locations.user_id, CAST(record_date as date)),

/* include reading list card click events - marked from the homepage */

Reading_List_Views AS (
SELECT user_id, CAST(record_date as date) as view_date, COUNT(*) AS Reading_List_Clicks
FROM event_tracking 
WHERE user_id IN (SELECT user_id FROM Main_Homepage_Table)
AND record_date >= CAST('2022-06-01' AS date)
AND event_name = 'reading list card click'
AND environment_name = 'Web Application'
AND CAST(JSON_EXTRACT(event_properties, '$.location') as varchar) = 'home'
GROUP BY user_id, CAST(record_date as date)),

/* book spotlight event interaction - highlights signed up book post 29th sep */

Book_Spotlight_Views AS (
SELECT user_id, CAST(record_date as date) as view_date, COUNT(*) AS Book_Spotlight_Clicks
FROM event_tracking 
WHERE event_name = 'book spotlight reading click'
AND CAST(json_extract(event_properties, '$.location') as varchar) = 'home'
AND user_id IN (SELECT user_id FROM Main_Homepage_Table)
AND record_date >= CAST('2022-06-01' AS date)
GROUP BY user_id, CAST(record_date as date)),

/* carousel & readling list card clicks data added to previous table  */

All_Homepage_Events AS (
SELECT Combined_Non_Book_Open_Sections.*, 
       Reading_Carousel_Book_Click,
       Reading_Carousel_Book_Open,
       Reading_Carousel_Book_Status_Update,
       Reading_Carousel_Workspace_Added,
       Interests_Curated_Carousel_Book_Click,
       Interests_Curated_Carousel_Book_Opened,
       Interests_Curated_Carousel_Book_Status_Update,
       Interests_Curated_Carousel_Book_Workspace_Added,
       Reading_Section_Continue_Reading_book_cover,
       Reading_Section_Continue_Reading_book_open,
       Want_Section_Continue_Reading_book_cover,
       Want_Section_Continue_Reading_book_open,
       Want_Section_First_Reading_book_cover,
       Want_Section_First_Reading_book_open,
       Completed_Section_Continue_Reading_book_cover,
       Completed_Section_Continue_Reading_book_open,
       Completed_Section_First_Reading_book_cover,
       Completed_Section_First_Reading_book_open,
       Reading_List_Clicks,
       Book_Spotlight_Clicks
       
FROM Combined_Non_Book_Open_Sections
LEFT JOIN Carousel_And_Reading_Section_Info ON  (Carousel_And_Reading_Section_Info.user_id = Combined_Non_Book_Open_Sections.user_id AND 
                                                 Carousel_And_Reading_Section_Info.view_date = Combined_Non_Book_Open_Sections.view_date)
                                 
LEFT JOIN Reading_List_Views ON (Reading_List_Views.user_id = Combined_Non_Book_Open_Sections.user_id AND 
                                 Reading_List_Views.view_date = Combined_Non_Book_Open_Sections.view_date)

LEFT JOIN Book_Spotlight_Views ON (Book_Spotlight_Views.user_id = Combined_Non_Book_Open_Sections.user_id AND 
                                 Book_Spotlight_Views.view_date = Combined_Non_Book_Open_Sections.view_date)),
                                        
/* attach user related information */

User_Info_Added AS (
SELECT All_Homepage_Events.*, 
       CAST(payment_channel_crude as varchar(300)) as payment_channel_crude,
       CAST(user_persona as varchar(300)) as user_persona, 
       CAST(acquisition_country as varchar(300)) as acquisition_country,
       CAST(acquisition_region as varchar(300)) as acquisition_region,
       CAST(utm_medium as varchar(300)) as utm_medium, 
       CAST(utm_source as varchar(300)) as utm_source, 
       CAST(study_level as varchar(300)) as study_level, 
       referrer_book, 
       CAST(converted_subscribed as varchar(300)) as converted_subscribed, 
       CAST(currently_subscribed as varchar(300)) as currently_subscribed
FROM All_Homepage_Events
LEFT JOIN analytics_reporting.user_registrations ON All_Homepage_Events.user_id = analytics_reporting.user_registrations.user_id),

/* create table showing user activity on D1 & W1 - as general engangment score */

Grouped_User_Activity AS (
SELECT analytics_reporting.user_registrations.user_id, 
       SUM(CASE WHEN reading_date <= date_add('day', 1, registration_time) THEN 1 ELSE 0 END) AS D1_Books_Opened,
       COUNT(DISTINCT(CASE WHEN reading_date <= date_add('day', 1, registration_time) THEN book_id ELSE NULL END)) AS D1_Unique_Books_Opened,
       SUM(CASE WHEN reading_date <= date_add('day', 1, registration_time) THEN reading_duration_seconds ELSE 0 END) AS D1_Secs_Read,
       
       SUM(CASE WHEN reading_date <= date_add('week', 1, registration_time) THEN 1 ELSE 0 END) AS W1_Books_Opened,
       COUNT(DISTINCT(CASE WHEN reading_date <= date_add('week', 1, registration_time) THEN book_id ELSE NULL END)) AS W1_Unique_Books_Opened,
       SUM(CASE WHEN reading_date <= date_add('week', 1, registration_time) THEN reading_duration_seconds ELSE 0 END) AS W1_Secs_Read
FROM analytics_reporting.user_registrations 
LEFT JOIN analytics_reporting.reading_activity_daily ON analytics_reporting.reading_activity_daily.user_id = analytics_reporting.user_registrations.user_id
WHERE analytics_reporting.user_registrations.user_id IN (SELECT user_id FROM User_Info_Added)
AND reading_date <= date_add('week', 1, registration_time)
GROUP BY analytics_reporting.user_registrations.user_id),

/* find trial & subscription dates for D2C - to append via user id and date to main table - so can report status of the user  */

User_Trial_Dates AS (
SELECT user_id, reference_tables.ref_calendar_day.calendar_date, 'D2C Trial' AS D2C_User_Status
FROM analytics_reporting.user_conversion_summary 
JOIN reference_tables.ref_calendar_day ON (CAST(trial_start_time as date) <= calendar_date AND calendar_date <= CAST(trial_end_time as date))
AND User_id IN (SELECT user_id from Main_Homepage_Table)
AND reference_tables.ref_calendar_day.calendar_date >= CAST('2022-06-01' as date)
AND reference_tables.ref_calendar_day.calendar_date >= CAST(trial_start_time as date)
AND trial_start_time IS NOT NULL),

User_Subscribed_Dates AS (
SELECT user_id, reference_tables.ref_calendar_day.calendar_date, 'D2C Subscribed' AS D2C_User_Status
FROM analytics_reporting.user_conversion_summary 
JOIN reference_tables.ref_calendar_day ON (CAST(subscription_start_time as date) < calendar_date AND calendar_date < CAST(subscription_end_time as date))
AND User_id IN (SELECT user_id from Main_Homepage_Table)
AND reference_tables.ref_calendar_day.calendar_date >= CAST('2022-06-01' as date)
AND reference_tables.ref_calendar_day.calendar_date >= CAST(subscription_start_time as date)
AND subscription_start_time IS NOT NULL
AND date_diff('day', subscription_start_time, subscription_end_time) > 1),

Combined_User_Date_Table AS (
SELECT *
FROM User_Trial_Dates
UNION ALL
SELECT *
FROM User_Subscribed_Dates),

/* group to avoid duplication of dates due to duplicates in user conversion summary */

Combined_User_Date_Table_Grouped AS (
SELECT user_id, calendar_date, D2C_User_Status
FROM Combined_User_Date_Table
GROUP BY user_id, calendar_date, D2C_User_Status),

/* Final insert table */

Final_Table AS (
SELECT User_Info_Added.*, 
       D1_Books_Opened,
       D1_Unique_Books_Opened,
       D1_Secs_Read,
       W1_Books_Opened,
       W1_Unique_Books_Opened,
       W1_Secs_Read,
       CASE WHEN payment_channel_crude = 'direct' AND D2C_User_Status IS NOT NULL THEN D2C_User_Status 
            WHEN payment_channel_crude = 'direct' AND D2C_User_Status IS NULL THEN 'Unknown'
            WHEN payment_channel_crude = 'indirect' THEN 'B2B' ELSE 'Unknown' END AS User_Status,
       ROW_NUMBER() OVER (PARTITION BY User_Info_Added.user_id ORDER BY view_date) AS User_Row_Number
FROM User_Info_Added
LEFT JOIN Grouped_User_Activity ON Grouped_User_Activity.user_id = User_Info_Added.user_id
LEFT JOIN Combined_User_Date_Table_Grouped ON (Combined_User_Date_Table_Grouped.user_id = User_Info_Added.user_id 
                                               AND Combined_User_Date_Table_Grouped.calendar_date = User_Info_Added.view_date))
                                               
SELECT  user_id,
        view_date,
        Homepage_Views,
        Discover_View,
        Reffer_A_Friend_View,
        Reading_View,
        Want_To_Read_View,
        Completed_Read_View,
        Notebook_View,
        Workspace_Viewed,
        Workspace_Created,
        Search_Page_Views,
        AccountButton_Settings_View,
        AccountButton_Profile_View,
        Reading_Carousel_Book_Click,
        Reading_Carousel_Book_Open,
        Reading_Carousel_Book_Status_Update,
        Reading_Carousel_Workspace_Added,
        Interests_Curated_Carousel_Book_Click,
        Interests_Curated_Carousel_Book_Opened,
        Interests_Curated_Carousel_Book_Status_Update,
        Interests_Curated_Carousel_Book_Workspace_Added,
        Reading_Section_Continue_Reading_book_cover,
        Reading_Section_Continue_Reading_book_open,
        Want_Section_Continue_Reading_book_cover,
        Want_Section_Continue_Reading_book_open,
        Want_Section_First_Reading_book_cover,
        Want_Section_First_Reading_book_open,
        Completed_Section_Continue_Reading_book_cover,
        Completed_Section_Continue_Reading_book_open,
        Completed_Section_First_Reading_book_cover,
        Completed_Section_First_Reading_book_open,
        Reading_List_Clicks,
        Book_Spotlight_Clicks,
        payment_channel_crude,
        user_persona , 
        acquisition_country,
        acquisition_region,
        utm_medium, 
        utm_source, 
        study_level, 
        referrer_book, 
        converted_subscribed , 
        currently_subscribed,
        D1_Books_Opened,
        D1_Unique_Books_Opened,
        D1_Secs_Read,
        W1_Books_Opened,
        W1_Unique_Books_Opened,
        W1_Secs_Read,
        CAST(User_Status as varchar(300)) AS User_Status
FROM Final_Table

                                       
            









